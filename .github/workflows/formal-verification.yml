name: certora-bug-injection

on:
  pull_request:
    branches:
      - certora

  workflow_dispatch:

jobs:
  list-scripts:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo ::set-output name=matrix::$(ls certora/scripts/*.sh | jq -Rsc 'split("\n")[:-1]')

  verify:
    runs-on: ubuntu-latest
    needs: list-scripts
    steps:
      - uses: actions/checkout@v2

      - name: Check key
        env:
          CERTORAKEY: ${{ secrets.CERTORAKEY }}
        run: echo "key length" ${#CERTORAKEY}

      - name: Install python
        uses: actions/setup-python@v2
        with: { python-version: 3.9 }

      - name: Install java
        uses: actions/setup-java@v1
        with: { java-version: "11", java-package: jre }

      - name: Install certora cli
        run: pip install certora-cli
        
      - name: Install solc
        run: |
          wget https://github.com/ethereum/solidity/releases/download/v0.8.13/solc-static-linux
          chmod +x solc-static-linux
          sudo mv solc-static-linux /usr/local/bin/solc
      
      - name: Install contract dependencies
        run: yarn
      
      - name: Verify rule ${{ matrix.rule }}
        run: |	          
          git apply --allow-empty certora/tests/certora/${{ matrix.patch }}
          sh ${{ matrix.rule }}
          
        env:
          CERTORAKEY: ${{ secrets.CERTORAKEY }}
          
    strategy:
      fail-fast: false
      max-parallel: 16
      matrix:
        patch:
          - original.patch
          - bug0.patch
          - bug1.patch
          - bug2.patch
          - bug3.patch
          - bug4.patch
          - bug5.patch
          - bug6.patch
          - bug7.patch
          - bug8.patch
          - bug9.patch
        rule: ${{ fromJson(needs.list-scripts.outputs.matrix) }} 